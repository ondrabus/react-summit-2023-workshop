---
import dayjs from "dayjs";
import { deliveryClient } from "../lib/kontent";
import { FlightModel, contentTypes } from "../models";
import FlightStatus from "./FlightStatus.astro";

const flightUpdates = await deliveryClient
    .items<FlightModel>()
    .type(contentTypes.flight.codename)
    .depthParameter(2)
    .toPromise()

---

<script>
    window.setTimeout(() => window.location.reload(), 30000);
</script>


<div class="container">
    <h1>Flight updates</h1>
    <hr />
    <p>This table shows latest flight data.</p>
    <table cellpadding="0" cellspacing="0">
        <tr>
            <th>Ident</th>
            <th>Aircraft</th>
            <th>Origin</th>
            <th>Destination</th>
            <th>Departure</th>
            <th>Estimated arrival</th>
            <th>Note</th>
        </tr>
        {flightUpdates.data.items.map(item => (
            <tr>
                <td>{item.system.name}</td>    
                <td>{item.elements.aircraft.linkedItems[0].elements.id.value}</td>
                <td>{item.elements.origin.linkedItems[0].elements.title.value}</td>
                <td>{item.elements.destination.linkedItems[0].elements.title.value}</td>
                <td>{dayjs(item.elements.departure.value, "DD/MM/YYYY H:mm")}</td>
                <td>{dayjs(item.elements.arrival.value, "DD/MM/YYYY H:mm")}</td>
                <FlightStatus statuses={item.elements.statuses.linkedItems} />
            </tr>
        ))}
    </table>
</div>

<style lang="sass" is:global>
    table
        text-align: left
        width: 100%
        color: #444

    tr:nth-child(odd)
        background: #ddd

    td, th
        padding: 10px

    .green
        background: lightgreen
    
    .yellow
        background: yellow
    
    .grey
        background: #ccc
</style>

<style lang="sass">
    h1
        text-align: left
        font-size: 3rem
        text-transform: none
        margin-left: 0

    p
        color: #6b6b6b
        text-align: left
        font-family: 'Roboto', sans-serif

</style>
